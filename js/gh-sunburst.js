!function(){"use strict";angular.module("gh.sunburst",["d3charts.sunburst","githubApi"]).controller("ghSunburstController",["$scope","$q","githubApi",function(a,b,c){function d(d,e){a.status="loading",a.repository={owner:d,repo:e};var f=c.getRepository(a.repository.owner,a.repository.repo),g=c.listBranches(a.repository.owner,a.repository.repo);b.all({generalInfo:f,branches:g}).then(function(b){a.repository.generalInfo=b.generalInfo,a.repository.branches=b.branches,a.repository.selectedBranch=_.where(b.branches,{name:b.generalInfo.default_branch})[0],a.status="ready"}).catch(function(b){a.status="error",console.log(b)})}window.scope=a,a.newOwner="vogelsgesang",a.newRepo="github-sunburst",d(a.newOwner,a.newRepo),a.changeRepository=d,a.$watch("repository.selectedBranch",function(b){return void 0!==b?(a.status="loading",c.listCommits(a.repository.owner,a.repository.repo,{sha:b.commit.sha}).then(function(b){a.repository.commits=b,a.repository.selectedCommit=a.repository.commits[0],a.status="ready"}).catch(function(b){a.status="error",console.log(b)})):void 0}),a.$watch("repository.selectedCommit",function(b){if(void 0!==b){a.status="loading";var d=b.sha;return c.getCompleteTree(a.repository.owner,a.repository.repo,d).then(function(b){a.extractedTree=b,a.status="ready"}).catch(function(b){a.status="error",console.log(b)})}a.extractedTree={}}),a.valueDimension="count",a.$watch("valueDimension",function(b){a.valueFunction="size"===b?function(a){return a.size}:function(){return 1}}),a.keyFunction=function(a){return a.path.join("/")}}])}();
//# sourceMappingURL=gh-sunburst.js.map