{"version":3,"file":"gh-sunburst.js","sources":["../../app/js/gh-sunburst.js"],"names":["angular","module","controller","$scope","$q","githubApi","changeRepository","newOwner","newRepo","status","repository","owner","repo","repositoryPromise","getRepository","branchListPromise","listBranches","all","generalInfo","branches","then","data","selectedBranch","_","where","name","default_branch","catch","e","console","log","window","scope","$watch","newBranch","undefined","listCommits","sha","commit","commits","selectedCommit","getCompleteTree","tree","extractedTree","valueDimension","dim","valueFunction","d","size","keyFunction","path","join"],"mappings":"CACA,WACE,YACAA,SAAQC,OAAO,eAAgB,oBAAqB,cACnDC,WAAW,wBAAyB,SAAU,KAAM,YAAa,SAASC,EAAQC,EAAIC,GAIrF,QAASC,GAAiBC,EAAUC,GAClCL,EAAOM,OAAS,UAChBN,EAAOO,YACLC,MAAOJ,EACPK,KAAMJ,EAER,IAAIK,GAAoBR,EAAUS,cAAcX,EAAOO,WAAWC,MAAOR,EAAOO,WAAWE,MACvFG,EAAoBV,EAAUW,aAAab,EAAOO,WAAWC,MAAOR,EAAOO,WAAWE,KAC1FR,GAAGa,KAAKC,YAAaL,EAAmBM,SAAUJ,IAC/CK,KAAK,SAASC,GACblB,EAAOO,WAAWQ,YAAcG,EAAKH,YACrCf,EAAOO,WAAWS,SAAWE,EAAKF,SAClChB,EAAOO,WAAWY,eAAiBC,EAAEC,MAAMH,EAAKF,UAAWM,KAAMJ,EAAKH,YAAYQ,iBAAiB,GACnGvB,EAAOM,OAAS,UAEjBkB,MAAM,SAASC,GACdzB,EAAOM,OAAS,QAChBoB,QAAQC,IAAIF,KApBlBG,OAAOC,MAAQ7B,EAuBfA,EAAOI,SAAW,eAClBJ,EAAOK,QAAU,kBACjBF,EAAiBH,EAAOI,SAAUJ,EAAOK,SACzCL,EAAOG,iBAAmBA,EAG1BH,EAAO8B,OAAO,4BAA6B,SAASC,GAClD,MAAiBC,UAAdD,GACD/B,EAAOM,OAAS,UACTJ,EAAU+B,YAAYjC,EAAOO,WAAWC,MAAOR,EAAOO,WAAWE,MAAOyB,IAAKH,EAAUI,OAAOD,MAClGjB,KAAK,SAASmB,GACbpC,EAAOO,WAAW6B,QAAUA,EAC5BpC,EAAOO,WAAW8B,eAAiBrC,EAAOO,WAAW6B,QAAQ,GAC7DpC,EAAOM,OAAS,UAEjBkB,MAAM,SAASC,GACdzB,EAAOM,OAAS,QAChBoB,QAAQC,IAAIF,MAVlB,SAgBFzB,EAAO8B,OAAO,4BAA6B,SAASO,GAClD,GAAsBL,SAAnBK,EAA8B,CAC/BrC,EAAOM,OAAS,SAChB,IAAI4B,GAAMG,EAAeH,GACzB,OAAOhC,GAAUoC,gBAAgBtC,EAAOO,WAAWC,MAAOR,EAAOO,WAAWE,KAAMyB,GAC/EjB,KAAK,SAASsB,GACbvC,EAAOwC,cAAgBD,EACvBvC,EAAOM,OAAS,UAEjBkB,MAAM,SAASC,GACdzB,EAAOM,OAAS,QAChBoB,QAAQC,IAAIF,KAGhBzB,EAAOwC,mBAIXxC,EAAOyC,eAAiB,QACxBzC,EAAO8B,OAAO,iBAAkB,SAASY,GAErC1C,EAAO2C,cADE,SAARD,EACsB,SAASE,GAAI,MAAOA,GAAEC,MAEtB,WAAa,MAAO,MAG/C7C,EAAO8C,YAAc,SAASF,GAAI,MAAOA,GAAEG,KAAKC,KAAK","sourcesContent":["//complete script is contained in an IIEF\n(function() {\n  \"use strict\";\n  angular.module(\"gh.sunburst\", [\"d3charts.sunburst\", \"githubApi\"])\n  .controller(\"ghSunburstController\", [\"$scope\", \"$q\", \"githubApi\", function($scope, $q, githubApi) {\n    window.scope = $scope;\n\n    //loads the basic informations and the branches for a repository\n    function changeRepository(newOwner, newRepo) {\n      $scope.status = \"loading\";\n      $scope.repository = {\n        owner: newOwner,\n        repo: newRepo\n      };\n      var repositoryPromise = githubApi.getRepository($scope.repository.owner, $scope.repository.repo);\n      var branchListPromise = githubApi.listBranches($scope.repository.owner, $scope.repository.repo);\n      $q.all({generalInfo: repositoryPromise, branches: branchListPromise})\n        .then(function(data) {\n          $scope.repository.generalInfo = data.generalInfo;\n          $scope.repository.branches = data.branches;\n          $scope.repository.selectedBranch = _.where(data.branches, {name: data.generalInfo.default_branch})[0];\n          $scope.status = \"ready\";\n        })\n        .catch(function(e) {\n          $scope.status = \"error\";\n          console.log(e);\n        });\n    }\n    $scope.newOwner = \"vogelsgesang\";\n    $scope.newRepo = \"github-sunburst\";\n    changeRepository($scope.newOwner, $scope.newRepo);\n    $scope.changeRepository = changeRepository;\n\n    //load the corresponding commits when the selected branch is changed\n    $scope.$watch(\"repository.selectedBranch\", function(newBranch) {\n      if(newBranch !== undefined) {\n        $scope.status = \"loading\";\n        return githubApi.listCommits($scope.repository.owner, $scope.repository.repo, {sha: newBranch.commit.sha})\n          .then(function(commits) {\n            $scope.repository.commits = commits;\n            $scope.repository.selectedCommit = $scope.repository.commits[0];\n            $scope.status = \"ready\";\n          })\n          .catch(function(e) {\n            $scope.status = \"error\";\n            console.log(e);\n          });\n      }\n    });\n\n    //reloads the tree associated with the currently selected sha\n    $scope.$watch(\"repository.selectedCommit\", function(selectedCommit) {\n      if(selectedCommit !== undefined) {\n        $scope.status = \"loading\";\n        var sha = selectedCommit.sha;\n        return githubApi.getCompleteTree($scope.repository.owner, $scope.repository.repo, sha)\n          .then(function(tree) {\n            $scope.extractedTree = tree;\n            $scope.status = \"ready\";\n          })\n          .catch(function(e) {\n            $scope.status = \"error\";\n            console.log(e);\n          });\n      } else {\n        $scope.extractedTree = {};\n      }\n    });\n\n    $scope.valueDimension = \"count\";\n    $scope.$watch(\"valueDimension\", function(dim) {\n      if(dim === \"size\") {\n        $scope.valueFunction = function(d) {return d.size;};\n      } else {\n        $scope.valueFunction = function(d) {return 1;};\n      }\n    });\n    $scope.keyFunction = function(d) {return d.path.join(\"/\");};\n  }]);\n})(); //surrounding IIEF\n"]}